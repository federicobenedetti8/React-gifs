{"version":3,"sources":["components/AddInput.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddInput","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","GifGridItem","title","img","className","src","alt","width","height","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","images","downsized_medium","GifGrid","useEffect","then","setImgs","imgs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAW,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAgB3C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,YAAY,cACZC,MAASV,EACTW,SAlBc,SAACR,GAAD,OAAOF,EAAcE,EAAES,OAAOF,a,QCL/CG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAGjC,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,EAASK,MAAM,QAAQC,OAAO,UACrD,mCAAMN,EAAN,W,uBCNCO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,kGACsFC,UAAWH,IADjG,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRnB,MAAOkB,EAAIlB,MACXC,IAAG,UAAEiB,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QATvB,kBAaZM,GAbY,4CAAH,sDCEPM,EAAU,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAGtBe,qBAAU,WACNhB,EAASC,GAAWgB,KAAMC,KAC3B,CAACjB,IALiC,MAObvB,mBAAS,IAPI,mBAO9ByC,EAP8B,KAOxBD,EAPwB,KAYrC,OACI,qCACI,mCAAOjB,EAAP,OACA,oBAAIN,UAAU,YAAd,SAEQwB,EAAKT,KAAK,SAAAhB,GAAG,OACT,cAAC,EAAD,eAAiCA,GAAdA,EAAIkB,aClBlCQ,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,oBAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,qCACI,sCACA,uBAEA,cAAC,EAAD,CAAUA,cAAgBA,IAE1B,6BAEQ4C,EAAWX,KAAK,SAACT,GAAD,OACZ,6BACI,cAAC,EAAD,CAASA,SAAaA,KADhBA,YCXlCqB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d34083eb.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddInput = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                placeholder=\"Buscar Gifs\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddInput.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,  \r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({ title, img }) => {\r\n\r\n\r\n    return (   \r\n        <div className=\"card\">\r\n            <img src={ img } alt={ title }  width=\"250px\" height=\"250px\"  />\r\n            <h5> {title} </h5>\r\n        </div>\r\n    )\r\n        \r\n\r\n    \r\n}\r\n","\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = (`https://api.giphy.com/v1/gifs/search?limit=6&api_key=gemKml3XUGyv639hYzz0WZKYmLW0yyou&q=${ encodeURI( category ) }`);\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map( gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            img: gif.images?.downsized_medium.url,     \r\n        }\r\n    });  \r\n\r\n    return gifs;\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then( setImgs );\r\n    }, [category])\r\n\r\n    const [imgs, setImgs] = useState([]);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>    \r\n            <h4> { category } </h4>\r\n            <ol className=\"row-start\">\r\n                { \r\n                    imgs.map( img =>\r\n                        <GifGridItem key={ img.id } { ...img } />\r\n                    )\r\n                }\r\n              \r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport {AddInput} from './components/AddInput';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Hunter X Hunter']);\r\n\r\n    return (\r\n        <>\r\n            <h2>Gifs</h2>\r\n            <hr/>      \r\n            \r\n            <AddInput setCategories={ setCategories } />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => \r\n                        <li key={ category }> \r\n                            <GifGrid category = { category } /> \r\n                        </li>  \r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}